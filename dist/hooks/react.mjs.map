{"version":3,"sources":["../../src/hooks/react.ts"],"sourcesContent":["import { useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\nimport { createStream } from \"../index\";\r\n\r\nimport type { StreamAPI, StreamStatus, ListenerMap } from \"../core/types\";\r\n\r\nexport function useStream<T = unknown>(\r\n  opts: Parameters<typeof createStream>[0]\r\n) {\r\n  const apiRef = useRef<StreamAPI | null>(null);\r\n\r\n  // Local state mirrors the current stream status for React consumers\r\n\r\n  const [messages, setMessages] = useState<T[]>([]);\r\n\r\n  const [status, setStatus] = useState<StreamStatus>(\"idle\");\r\n\r\n  const [error, setError] = useState<Error | null>(null);\r\n\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n  if (!apiRef.current) {\r\n    apiRef.current = createStream(opts);\r\n\r\n    // Sync the initial state from the underlying stream API\r\n\r\n    setStatus(apiRef.current.state.status as StreamStatus);\r\n\r\n    setIsOpen(apiRef.current.state.isOpen);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const api = apiRef.current!;\r\n\r\n    const offOpen = api.on(\"open\", () => setIsOpen(true));\r\n\r\n    const offClose = api.on(\"close\", () => setIsOpen(false));\r\n\r\n    const offStatus = api.on(\"status\", (s: StreamStatus) => setStatus(s));\r\n\r\n    const offError = api.on(\"error\", (e: Error) => setError(e));\r\n\r\n    const offMsg = api.on(\"message\", (m: unknown) =>\r\n      setMessages((prev: T[]) => [...prev, m as T])\r\n    );\r\n\r\n    api.open();\r\n\r\n    return () => {\r\n      offOpen();\r\n\r\n      offClose();\r\n\r\n      offStatus();\r\n\r\n      offError();\r\n\r\n      offMsg();\r\n\r\n      api.close();\r\n    };\r\n  }, []);\r\n\r\n  // Expose the stream API along with the reactive pieces of state\r\n\r\n  return useMemo(\r\n    () => ({ ...apiRef.current!, messages, status, error, isOpen }),\r\n\r\n    [messages, status, error, isOpen]\r\n  );\r\n}\r\n"],"mappings":";;;;;AAAA,SAAS,WAAW,SAAS,QAAQ,gBAAgB;AAM9C,SAAS,UACd,MACA;AACA,QAAM,SAAS,OAAyB,IAAI;AAI5C,QAAM,CAAC,UAAU,WAAW,IAAI,SAAc,CAAC,CAAC;AAEhD,QAAM,CAAC,QAAQ,SAAS,IAAI,SAAuB,MAAM;AAEzD,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAuB,IAAI;AAErD,QAAM,CAAC,QAAQ,SAAS,IAAI,SAAkB,KAAK;AAEnD,MAAI,CAAC,OAAO,SAAS;AACnB,WAAO,UAAU,aAAa,IAAI;AAIlC,cAAU,OAAO,QAAQ,MAAM,MAAsB;AAErD,cAAU,OAAO,QAAQ,MAAM,MAAM;AAAA,EACvC;AAEA,YAAU,MAAM;AACd,UAAM,MAAM,OAAO;AAEnB,UAAM,UAAU,IAAI,GAAG,QAAQ,MAAM,UAAU,IAAI,CAAC;AAEpD,UAAM,WAAW,IAAI,GAAG,SAAS,MAAM,UAAU,KAAK,CAAC;AAEvD,UAAM,YAAY,IAAI,GAAG,UAAU,CAAC,MAAoB,UAAU,CAAC,CAAC;AAEpE,UAAM,WAAW,IAAI,GAAG,SAAS,CAAC,MAAa,SAAS,CAAC,CAAC;AAE1D,UAAM,SAAS,IAAI;AAAA,MAAG;AAAA,MAAW,CAAC,MAChC,YAAY,CAAC,SAAc,CAAC,GAAG,MAAM,CAAM,CAAC;AAAA,IAC9C;AAEA,QAAI,KAAK;AAET,WAAO,MAAM;AACX,cAAQ;AAER,eAAS;AAET,gBAAU;AAEV,eAAS;AAET,aAAO;AAEP,UAAI,MAAM;AAAA,IACZ;AAAA,EACF,GAAG,CAAC,CAAC;AAIL,SAAO;AAAA,IACL,OAAO,EAAE,GAAG,OAAO,SAAU,UAAU,QAAQ,OAAO,OAAO;AAAA,IAE7D,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,EAClC;AACF;","names":[]}